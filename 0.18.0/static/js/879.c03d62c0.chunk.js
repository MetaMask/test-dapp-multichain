/*! For license information please see 879.c03d62c0.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunk_metamask_test_dapp_multichain=self.webpackChunk_metamask_test_dapp_multichain||[]).push([[879],{1879:(t,e,r)=>{function n(t){if(!Number.isSafeInteger(t)||t<1||t>40)throw new Error(`Invalid version=${t}. Expected number [1..40]`)}function o(t,e){return t.toString(2).padStart(e,"0")}function i(t,e){const r=t%e;return r>=0?r:e+r}function l(t,e){return new Array(t).fill(e)}function a(){let t=0;for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];for(const i of r)t=Math.max(t,i.length);const o=[];for(let i=0;i<t;i++)for(const t of r)i>=t.length||o.push(t[i]);return new Uint8Array(o)}function h(t,e,r){if(r<0||r+e.length>t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[r+n])return!1;return!0}function s(){let t,e=1/0;return{add(r,n){r>=e||(t=n,e=r)},get:()=>t,score:()=>e}}function c(t){return{has:e=>t.includes(e),decode:e=>{if(!Array.isArray(e)||e.length&&"string"!==typeof e[0])throw new Error("alphabet.decode input should be array of strings");return e.map((e=>{if("string"!==typeof e)throw new Error(`alphabet.decode: not string element=${e}`);const r=t.indexOf(e);if(-1===r)throw new Error(`Unknown letter: "${e}". Allowed: ${t}`);return r}))},encode:e=>{if(!Array.isArray(e)||e.length&&"number"!==typeof e[0])throw new Error("alphabet.encode input should be an array of numbers");return e.map((e=>{if(function(t){if(!Number.isSafeInteger(t))throw new Error(`Wrong integer: ${t}`)}(e),e<0||e>=t.length)throw new Error(`Digit index outside alphabet: ${e} (alphabet: ${t.length})`);return t[e]}))}}}r.r(e),r.d(e,{Bitmap:()=>d,ECMode:()=>f,Encoding:()=>u,_tests:()=>z,default:()=>B,utf8ToBytes:()=>k,utils:()=>M});class d{static size(t,e){if("number"===typeof t&&(t={height:t,width:t}),!Number.isSafeInteger(t.height)&&t.height!==1/0)throw new Error(`Bitmap: wrong height=${t.height} (${typeof t.height})`);if(!Number.isSafeInteger(t.width)&&t.width!==1/0)throw new Error(`Bitmap: wrong width=${t.width} (${typeof t.width})`);return void 0!==e&&(t={width:Math.min(t.width,e.width),height:Math.min(t.height,e.height)}),t}static fromString(t){const e=(t=t.replace(/^\n+/g,"").replace(/\n+$/g,"")).split("\n"),r=e.length,n=new Array(r);let o;for(const i of e){const t=i.split("").map((t=>{if("X"===t)return!0;if(" "===t)return!1;if("?"!==t)throw new Error(`Bitmap.fromString: unknown symbol=${t}`)}));if(o&&t.length!==o)throw new Error(`Bitmap.fromString different row sizes: width=${o} cur=${t.length}`);o=t.length,n.push(t)}return o||(o=0),new d({height:r,width:o},n)}constructor(t,e){const{height:r,width:n}=d.size(t);this.data=e||Array.from({length:r},(()=>l(n,void 0))),this.height=r,this.width=n}point(t){return this.data[t.y][t.x]}isInside(t){return 0<=t.x&&t.x<this.width&&0<=t.y&&t.y<this.height}size(t){if(!t)return{height:this.height,width:this.width};const{x:e,y:r}=this.xy(t);return{height:this.height-r,width:this.width-e}}xy(t){if("number"===typeof t&&(t={x:t,y:t}),!Number.isSafeInteger(t.x))throw new Error(`Bitmap: wrong x=${t.x}`);if(!Number.isSafeInteger(t.y))throw new Error(`Bitmap: wrong y=${t.y}`);return t.x=i(t.x,this.width),t.y=i(t.y,this.height),t}rect(t,e,r){const{x:n,y:o}=this.xy(t),{height:i,width:l}=d.size(e,this.size({x:n,y:o}));for(let a=0;a<i;a++)for(let t=0;t<l;t++)this.data[o+a][n+t]="function"===typeof r?r({x:t,y:a},this.data[o+a][n+t]):r;return this}rectRead(t,e,r){return this.rect(t,e,((t,e)=>(r(t,e),e)))}hLine(t,e,r){return this.rect(t,{width:e,height:1},r)}vLine(t,e,r){return this.rect(t,{width:1,height:e},r)}border(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:2,e=arguments.length>1?arguments[1]:void 0;const r=this.height+2*t,n=this.width+2*t,o=l(t,e),i=Array.from({length:t},(()=>l(n,e)));return new d({height:r,width:n},[...i,...this.data.map((t=>[...o,...t,...o])),...i])}embed(t,e){return this.rect(t,e.size(),(t=>{let{x:r,y:n}=t;return e.data[n][r]}))}rectSlice(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.size();const r=new d(d.size(e,this.size(this.xy(t))));return this.rect(t,e,((t,e)=>{let{x:n,y:o}=t;return r.data[o][n]=e})),r}inverse(){const{height:t,width:e}=this;return new d({height:e,width:t}).rect({x:0,y:0},1/0,(t=>{let{x:e,y:r}=t;return this.data[e][r]}))}scale(t){if(!Number.isSafeInteger(t)||t>1024)throw new Error(`Wrong scale factor: ${t}`);const{height:e,width:r}=this;return new d({height:t*e,width:t*r}).rect({x:0,y:0},1/0,(e=>{let{x:r,y:n}=e;return this.data[Math.floor(n/t)][Math.floor(r/t)]}))}clone(){return new d(this.size()).rect({x:0,y:0},this.size(),(t=>{let{x:e,y:r}=t;return this.data[r][e]}))}assertDrawn(){this.rectRead(0,1/0,((t,e)=>{if("boolean"!==typeof e)throw new Error("Invalid color type="+typeof e)}))}toString(){return this.data.map((t=>t.map((t=>void 0===t?"?":t?"X":" ")).join(""))).join("\n")}toASCII(){const{height:t,width:e,data:r}=this;let n="";for(let o=0;o<t;o+=2){for(let i=0;i<e;i++){const e=r[o][i],l=o+1>=t||r[o+1][i];e||l?!e&&l?n+="\u2580":e&&!l?n+="\u2584":e&&l&&(n+=" "):n+="\u2588"}n+="\n"}return n}toTerm(){const t="\x1b[0m",e=`\x1b[1;47m  ${t}`,r=`\x1b[40m  ${t}`;return this.data.map((t=>t.map((t=>t?r:e)).join(""))).join("\n")}toSVG(){let t=`<svg xmlns:svg="http://www.w3.org/2000/svg" viewBox="0 0 ${this.width} ${this.height}" version="1.1" xmlns="http://www.w3.org/2000/svg">`;return this.rectRead(0,1/0,((e,r)=>{let{x:n,y:o}=e;r&&(t+=`<rect x="${n}" y="${o}" width="1" height="1" />`)})),t+="</svg>",t}toGIF(){const t=t=>[255&t,t>>>8&255],e=[...t(this.width),...t(this.height)],r=[];this.rectRead(0,1/0,((t,e)=>r.push(+(!0===e))));const n=126,o=[71,73,70,56,55,97,...e,246,0,0,255,255,255,...l(381,0),44,0,0,0,0,...e,0,7],i=Math.floor(r.length/n);for(let l=0;l<i;l++)o.push(127,128,...r.slice(n*l,n*(l+1)).map((t=>+t)));return o.push(r.length%n+1,128,...r.slice(i*n).map((t=>+t))),o.push(1,129,0,59),new Uint8Array(o)}toImage(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const{height:e,width:r}=this.size(),n=new Uint8Array(e*r*(t?3:4));let o=0;for(let i=0;i<e;i++)for(let e=0;e<r;e++){const r=this.data[i][e]?0:255;n[o++]=r,n[o++]=r,n[o++]=r,t||(n[o++]=255)}return{height:e,width:r,data:n}}}const f=["low","medium","quartile","high"],u=["numeric","alphanumeric","byte","kanji","eci"],g=[26,44,70,100,134,172,196,242,292,346,404,466,532,581,655,733,815,901,991,1085,1156,1258,1364,1474,1588,1706,1828,1921,2051,2185,2323,2465,2611,2761,2876,3034,3196,3362,3532,3706],w={low:[7,10,15,20,26,18,20,24,30,18,20,24,26,30,22,24,28,30,28,28,28,28,30,30,26,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],medium:[10,16,26,18,24,16,18,22,22,26,30,22,22,24,24,28,28,26,26,26,26,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28],quartile:[13,22,18,26,18,24,18,22,20,24,28,26,24,20,30,24,28,28,26,30,28,30,30,30,30,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],high:[17,28,22,16,22,28,26,26,24,28,24,28,22,24,24,30,28,28,26,28,30,24,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30]},m={low:[1,1,1,1,1,2,2,2,2,4,4,4,4,4,6,6,6,6,7,8,8,9,9,10,12,12,12,13,14,15,16,17,18,19,19,20,21,22,24,25],medium:[1,1,1,2,2,4,4,4,5,5,5,8,9,9,10,10,11,13,14,16,17,17,18,20,21,23,25,26,28,29,31,33,35,37,38,40,43,45,47,49],quartile:[1,1,2,2,4,4,6,6,8,8,8,10,12,16,12,17,16,18,21,20,23,23,25,27,29,34,34,35,38,40,43,45,48,51,53,56,59,62,65,68],high:[1,1,2,4,4,4,5,6,8,8,11,11,16,16,18,16,19,21,25,25,25,34,30,32,35,37,40,42,45,48,51,54,57,60,63,66,70,74,77,81]},y={size:{encode:t=>21+4*(t-1),decode:t=>(t-17)/4},sizeType:t=>Math.floor((t+7)/17),alignmentPatterns(t){if(1===t)return[];const e=y.size.encode(t)-6-1,r=e-6,n=Math.ceil(r/28);let o=Math.floor(r/n);o%2?o+=1:r%n*2>=n&&(o+=2);const i=[6];for(let l=1;l<n;l++)i.push(e-(n-l)*o);return i.push(e),i},ECCode:{low:1,medium:0,quartile:3,high:2},formatMask:21522,formatBits(t,e){const r=y.ECCode[t]<<3|e;let n=r;for(let o=0;o<10;o++)n=n<<1^1335*(n>>9);return(r<<10|n)^y.formatMask},versionBits(t){let e=t;for(let r=0;r<12;r++)e=e<<1^7973*(e>>11);return t<<12|e},alphabet:{numeric:c("0123456789"),alphanumerc:c("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:")},lengthBits:(t,e)=>({numeric:[10,12,14],alphanumeric:[9,11,13],byte:[8,16,16],kanji:[8,10,12],eci:[0,0,0]}[e][y.sizeType(t)]),modeBits:{numeric:"0001",alphanumeric:"0010",byte:"0100",kanji:"1000",eci:"0111"},capacity(t,e){const r=g[t-1],n=w[e][t-1],o=m[e][t-1],i=Math.floor(r/o)-n,l=o-r%o;return{words:n,numBlocks:o,shortBlocks:l,blockLen:i,capacity:8*(r-n*o),total:(n+i)*o+o-l}}},p=[(t,e)=>(t+e)%2==0,(t,e)=>e%2==0,(t,e)=>t%3==0,(t,e)=>(t+e)%3==0,(t,e)=>(Math.floor(e/2)+Math.floor(t/3))%2==0,(t,e)=>t*e%2+t*e%3==0,(t,e)=>(t*e%2+t*e%3)%2==0,(t,e)=>((t+e)%2+t*e%3)%2==0],b={tables:(()=>{const t=l(256,0),e=l(256,0);for(let r=0,n=1;r<256;r++)t[r]=n,e[n]=r,n<<=1,256&n&&(n^=285);return{exp:t,log:e}})(),exp:t=>b.tables.exp[t],log(t){if(0===t)throw new Error(`GF.log: wrong arg=${t}`);return b.tables.log[t]%255},mul:(t,e)=>0===t||0===e?0:b.tables.exp[(b.tables.log[t]+b.tables.log[e])%255],add:(t,e)=>t^e,pow:(t,e)=>b.tables.exp[b.tables.log[t]*e%255],inv(t){if(0===t)throw new Error(`GF.inverse: wrong arg=${t}`);return b.tables.exp[255-b.tables.log[t]]},polynomial(t){if(0==t.length)throw new Error("GF.polymomial: wrong length");if(0!==t[0])return t;let e=0;for(;e<t.length-1&&0==t[e];e++);return t.slice(e)},monomial(t,e){if(t<0)throw new Error(`GF.monomial: wrong degree=${t}`);if(0==e)return[0];let r=l(t+1,0);return r[0]=e,b.polynomial(r)},degree:t=>t.length-1,coefficient:(t,e)=>t[b.degree(t)-e],mulPoly(t,e){if(0===t[0]||0===e[0])return[0];const r=l(t.length+e.length-1,0);for(let n=0;n<t.length;n++)for(let o=0;o<e.length;o++)r[n+o]=b.add(r[n+o],b.mul(t[n],e[o]));return b.polynomial(r)},mulPolyScalar(t,e){if(0==e)return[0];if(1==e)return t;const r=l(t.length,0);for(let n=0;n<t.length;n++)r[n]=b.mul(t[n],e);return b.polynomial(r)},mulPolyMonomial(t,e,r){if(e<0)throw new Error("GF.mulPolyMonomial: wrong degree");if(0==r)return[0];const n=l(t.length+e,0);for(let o=0;o<t.length;o++)n[o]=b.mul(t[o],r);return b.polynomial(n)},addPoly(t,e){if(0===t[0])return e;if(0===e[0])return t;let r=t,n=e;r.length>n.length&&([r,n]=[n,r]);let o=l(n.length,0),i=n.length-r.length,a=n.slice(0,i);for(let l=0;l<a.length;l++)o[l]=a[l];for(let l=i;l<n.length;l++)o[l]=b.add(r[l-i],n[l]);return b.polynomial(o)},remainderPoly(t,e){const r=Array.from(t);for(let n=0;n<t.length-e.length+1;n++){const t=r[n];if(0!==t)for(let o=1;o<e.length;o++)0!==e[o]&&(r[n+o]=b.add(r[n+o],b.mul(e[o],t)))}return r.slice(t.length-e.length+1,r.length)},divisorPoly(t){let e=[1];for(let r=0;r<t;r++)e=b.mulPoly(e,[1,b.pow(2,r)]);return e},evalPoly(t,e){if(0==e)return b.coefficient(t,0);let r=t[0];for(let n=1;n<t.length;n++)r=b.add(b.mul(e,r),t[n]);return r},euclidian(t,e,r){b.degree(t)<b.degree(e)&&([t,e]=[e,t]);let n=t,o=e,i=[0],l=[1];for(;2*b.degree(o)>=r;){let t=n,e=i;if(n=o,i=l,0===n[0])throw new Error("rLast[0] === 0");o=t;let r=[0];const a=b.inv(n[0]);for(;b.degree(o)>=b.degree(n)&&0!==o[0];){const t=b.degree(o)-b.degree(n),e=b.mul(o[0],a);r=b.addPoly(r,b.monomial(t,e)),o=b.addPoly(o,b.mulPolyMonomial(n,t,e))}if(r=b.mulPoly(r,i),l=b.addPoly(r,e),b.degree(o)>=b.degree(n))throw new Error(`Division failed r: ${o}, rLast: ${n}`)}const a=b.coefficient(l,0);if(0==a)throw new Error("sigmaTilde(0) was zero");const h=b.inv(a);return[b.mulPolyScalar(l,h),b.mulPolyScalar(o,h)]}};function v(t,e){const{words:r,shortBlocks:n,numBlocks:o,blockLen:i,total:h}=y.capacity(t,e),s=(c=r,{encode(t){const e=b.divisorPoly(c),r=Array.from(t);return r.push(...e.slice(0,-1).fill(0)),Uint8Array.from(b.remainderPoly(r,e))},decode(t){const e=t.slice(),r=b.polynomial(Array.from(t));let n=l(c,0),o=!1;for(let l=0;l<c;l++){const t=b.evalPoly(r,b.exp(l));n[n.length-1-l]=t,0!==t&&(o=!0)}if(!o)return e;n=b.polynomial(n);const i=b.monomial(c,1),[a,h]=b.euclidian(i,n,c),s=l(b.degree(a),0);let d=0;for(let l=1;l<256&&d<s.length;l++)0===b.evalPoly(a,l)&&(s[d++]=b.inv(l));if(d!==s.length)throw new Error("RS.decode: wrong errors number");for(let l=0;l<s.length;l++){const t=e.length-1-b.log(s[l]);if(t<0)throw new Error("RS.decode: wrong error location");const r=b.inv(s[l]);let n=1;for(let e=0;e<s.length;e++)l!==e&&(n=b.mul(n,b.add(1,b.mul(s[e],r))));e[t]=b.add(e[t],b.mul(b.evalPoly(h,r),b.inv(n)))}return e}});var c;return{encode(t){const e=[],r=[];for(let a=0;a<o;a++){const o=i+(a<n?0:1);e.push(t.subarray(0,o)),r.push(s.encode(t.subarray(0,o))),t=t.subarray(o)}const l=a(...e),h=a(...r),c=new Uint8Array(l.length+h.length);return c.set(l),c.set(h,l.length),c},decode(t){if(t.length!==h)throw new Error(`interleave.decode: len(data)=${t.length}, total=${h}`);const e=[];for(let h=0;h<o;h++){const t=h<n;e.push(new Uint8Array(r+i+(t?0:1)))}let l=0;for(let r=0;r<i;r++)for(let n=0;n<o;n++)e[n][r]=t[l++];for(let r=n;r<o;r++)e[r][i]=t[l++];for(let h=i;h<i+r;h++)for(let r=0;r<o;r++){const o=r<n;e[r][h+(o?0:1)]=t[l++]}const a=[];for(const n of e)a.push(...Array.from(s.decode(n)).slice(0,-r));return Uint8Array.from(a)}}}function x(t,e,r){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o=y.size.encode(t);let i=new d(o+2);const l=new d(3).rect(0,3,!0).border(1,!1).border(1,!0).border(1,!1);i=i.embed(0,l).embed({x:-l.width,y:0},l).embed({x:0,y:-l.height},l),i=i.rectSlice(1,o);const a=new d(1).rect(0,1,!0).border(1,!1).border(1,!0),h=y.alignmentPatterns(t);for(const s of h)for(const t of h)void 0===i.data[s][t]&&i.embed({x:t-2,y:s-2},a);i=i.hLine({x:0,y:6},1/0,((t,e)=>{let{x:r}=t;return void 0===e?r%2==0:e})).vLine({x:6,y:0},1/0,((t,e)=>{let{y:r}=t;return void 0===e?r%2==0:e}));{const t=y.formatBits(e,r),l=e=>!n&&1==(t>>e&1);for(let e=0;e<6;e++)i.data[e][8]=l(e);for(let e=6;e<8;e++)i.data[e+1][8]=l(e);for(let e=8;e<15;e++)i.data[o-15+e][8]=l(e);for(let e=0;e<8;e++)i.data[8][o-e-1]=l(e);for(let e=8;e<9;e++)i.data[8][15-e-1+1]=l(e);for(let e=9;e<15;e++)i.data[8][15-e-1]=l(e);i.data[o-8][8]=!n}if(t>=7){const e=y.versionBits(t);for(let t=0;t<18;t+=1){const r=!n&&1==(e>>t&1),l=Math.floor(t/3),a=t%3+o-8-3;i.data[l][a]=r,i.data[a][l]=r}}return i}function E(t,e,r){const n=t.height,o=p[e];let i=-1,l=n-1;for(let a=n-1;a>0;a-=2){for(6==a&&(a=5);;l+=i){for(let e=0;e<2;e+=1){const n=a-e;void 0===t.data[l][n]&&r(n,l,o(n,l))}if(l+i<0||l+i>=n)break}i=-i}}function $(t){let e="numeric";for(let r of t)if(!y.alphabet.numeric.has(r)&&(e="alphanumeric",!y.alphabet.alphanumerc.has(r)))return"byte";return e}function k(t){if("string"!==typeof t)throw new Error("utf8ToBytes expected string, got "+typeof t);return new Uint8Array((new TextEncoder).encode(t))}function A(t,e,r,n){let i="",l=r.length;if("numeric"===n){const t=y.alphabet.numeric.decode(r.split("")),e=t.length;for(let r=0;r<e-2;r+=3)i+=o(100*t[r]+10*t[r+1]+t[r+2],10);e%3===1?i+=o(t[e-1],4):e%3===2&&(i+=o(10*t[e-2]+t[e-1],7))}else if("alphanumeric"===n){const t=y.alphabet.alphanumerc.decode(r.split("")),e=t.length;for(let r=0;r<e-1;r+=2)i+=o(45*t[r]+t[r+1],11);e%2==1&&(i+=o(t[e-1],6))}else{if("byte"!==n)throw new Error("encode: unsupported type");{const t=k(r);l=t.length,i=Array.from(t).map((t=>o(t,8))).join("")}}const{capacity:a}=y.capacity(t,e),h=o(l,y.lengthBits(t,n));let s=y.modeBits[n]+h+i;if(s.length>a)throw new Error("Capacity overflow");s+="0".repeat(Math.min(4,Math.max(0,a-s.length))),s.length%8&&(s+="0".repeat(8-s.length%8));const c="1110110000010001";for(let o=0;s.length!==a;o++)s+=c[o%16];const d=Uint8Array.from(s.match(/(.{8})/g).map((t=>Number(`0b${t}`))));return v(t,e).encode(d)}function S(t,e,r,n){const o=x(t,e,n,arguments.length>4&&void 0!==arguments[4]&&arguments[4]);let i=0;const l=8*r.length;if(E(o,n,((t,e,n)=>{let a=!1;i<l&&(a=0!==(r[i>>>3]>>(7-i&7)&1),i++),o.data[e][t]=a!==n})),i!==l)throw new Error("QR: bytes left after draw");return o}function P(t){const e=t.inverse(),r=t=>{let e=0;for(let r,n=0,o=1;n<t.length;n++)r===t[n]&&(o++,n!==t.length-1)||(o>=5&&(e+=o-5+3),r=t[n],o=1);return e};let n=0;t.data.forEach((t=>n+=r(t))),e.data.forEach((t=>n+=r(t)));let o=0,i=t.data;const l=t.width-1,a=t.height-1;for(let h=0;h<l;h++)for(let t=0;t<a;t++){const e=h+1,r=t+1;i[h][t]===i[e][t]&&i[e][t]===i[h][r]&&i[e][t]===i[e][r]&&(o+=3)}const s=t=>{const e=[!0,!1,!0,!0,!0,!1,!0],r=[!1,!1,!1,!1],n=[...e,...r],o=[...r,...e];let i=0;for(let l=0;l<t.length;l++)h(t,n,l)&&(i+=40),h(t,o,l)&&(i+=40);return i};let c=0;for(const h of t.data)c+=s(h);for(const h of e.data)c+=s(h);let d=0;t.rectRead(0,1/0,((t,e)=>d+=e?1:0));const f=d/(t.height*t.width)*100,u=10*Math.floor(Math.abs(f-50)/5);return n+o+c+u}function B(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"raw",r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const o=void 0!==r.ecc?r.ecc:"medium";!function(t){if(!f.includes(t))throw new Error(`Invalid error correction mode=${t}. Expected: ${f}`)}(o);const i=void 0!==r.encoding?r.encoding:$(t);!function(t){if(!u.includes(t))throw new Error(`Encoding: invalid mode=${t}. Expected: ${u}`);if("kanji"===t||"eci"===t)throw new Error(`Encoding: ${t} is not supported (yet?).`)}(i),void 0!==r.mask&&function(t){if(![0,1,2,3,4,5,6,7].includes(t)||!p[t])throw new Error(`Invalid mask=${t}. Expected number [0..7]`)}(r.mask);let l,a=r.version,h=new Error("Unknown error");if(void 0!==a)n(a),l=A(a,o,t,i);else for(let n=1;n<=40;n++)try{l=A(n,o,t,i),a=n;break}catch(g){h=g}if(!a||!l)throw h;let c=function(t,e,r,n){if(void 0===n){const o=s();for(let n=0;n<p.length;n++)o.add(P(S(t,e,r,n,!0)),n);n=o.get()}if(void 0===n)throw new Error("Cannot find mask");return S(t,e,r,n)}(a,o,l,r.mask);c.assertDrawn();const d=void 0===r.border?2:r.border;if(!Number.isSafeInteger(d))throw new Error("Wrong border type="+typeof d);if(c=c.border(d,!1),void 0!==r.scale&&(c=c.scale(r.scale)),"raw"===e)return c.data;if("ascii"===e)return c.toASCII();if("svg"===e)return c.toSVG();if("gif"===e)return c.toGIF();if("term"===e)return c.toTerm();throw new Error(`Unknown output: ${e}`)}const M={best:s,bin:o,drawTemplate:x,fillArr:l,info:y,interleave:v,validateVersion:n,zigzag:E},z={Bitmap:d,info:y,detectType:$,encode:A,drawQR:S,penalty:P,PATTERNS:p}}}]);
//# sourceMappingURL=879.c03d62c0.chunk.js.map